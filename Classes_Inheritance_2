// Base class
class LibraryItem {
  constructor(title, id) {
    this.title = title;
    this.id = id;
    this.isAvailable = true;
  }

  checkOut() {
    if (this.isAvailable) {
      this.isAvailable = false;
      console.log(`${this.title} has been checked out.`);
    } else {
      console.log(`${this.title} is already checked out.`);
    }
  }

  returnItem() {
    if (!this.isAvailable) {
      this.isAvailable = true;
      console.log(`${this.title} has been returned.`);
    } else {
      console.log(`${this.title} was not checked out.`);
    }
  }
}

// Child class: Book
class Book extends LibraryItem {
  constructor(title, id, author, genre) {
    super(title, id);
    this.author = author;
    this.genre = genre;
  }

  getDetails() {
    return `Book: ${this.title} by ${this.author} (Genre: ${this.genre})`;
  }
}

// Child class: DVD
class DVD extends LibraryItem {
  constructor(title, id, director, duration) {
    super(title, id);
    this.director = director;
    this.duration = duration;
  }

  getDetails() {
    return `DVD: ${this.title}, Directed by ${this.director} (${this.duration} mins)`;
  }
}

// Child class: Magazine
class Magazine extends LibraryItem {
  constructor(title, id, issueNumber, publisher) {
    super(title, id);
    this.issueNumber = issueNumber;
    this.publisher = publisher;
  }

  getDetails() {
    return `Magazine: ${this.title}, Issue #${this.issueNumber}, Publisher: ${this.publisher}`;
  }
}

// Instantiate and test
const book = new Book("The Great Gatsby", 101, "F. Scott Fitzgerald", "Fiction");
const dvd = new DVD("Interstellar", 202, "Christopher Nolan", 169);
const magazine = new Magazine("Time", 303, 48, "Time Inc.");

book.checkOut();
dvd.returnItem();
magazine.checkOut();
book.returnItem();

console.log(book.getDetails());
console.log(dvd.getDetails());
console.log(magazine.getDetails());
